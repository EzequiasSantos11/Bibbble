Primeiramente optei por usar o React.js puro pois meu desenvolvimento é mais fluido nele e conseguirei entregar mais. Iniciei o projeto usando vite pelo fato do vite ser mais leve e ter o mínimo necessário para criação de React-app's.

Para minha estrutura de pastas optei por usar um padrão próprio...

src -> pages | components | Styles | Services
public -> assets (peguei imagens que não virão da api, no caso a logo).

Vou usar o Styeled-components para estilização do CSS.
vou usar o ReactIcons para icones.
Vou usar Typescript para facilitar o desenvolvimento (ainda é Js só que com um booster).
Para consumir API vou usar o AXIOS.

Primeiramente eu montei o site inteiramente estático para ver como as coisas ficariam na tela e ajustar alguns detalhes. Tuda a parte de visualização dos cards usa display grid e flex de forma a facilitar a responsividade.

Criei um componente que vai ficar responsável por mostrar os livros (AllBooks).
Tive dificuldades na parte de loading, então fui até um código antigo meu ver como eu tinha feito e se não estava esquecendo nada: https://github.com/EzequiasSantos11/TODev/blob/master/src/pages/Deashboard/index.jsx

Para chamar a API vou criar uma rota pai com axios em /Services, lá farei um console.log() para ver oque a API me retorna e já poder criar uma tipagem pra isso em /utils e só então depois mostrar em tela. 

A parte da responsividade decidi fazer de cima para baixo apartir da largura de 800px, começando pelo Header em diante. Consigo melhorar a experiência do usuário na questão de pesquisas com um input menor e também uma opção quando o usuário clicar fora dos modais de input e menu ele fechar ambus.

Embora a visualização de Books esteja responsiva eu vou preferir deixála com mais itens aparecendo na parte mobile sem que dificulte a navegação do usuário.